//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.11.02 at 10:24:27 GMT+02:00 
//


package mats.importer.impl;

public class MaterialDataTypeImpl implements mats.importer.MaterialDataType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
{

    protected mats.importer.Materials _Materials;
    protected mats.importer.MaterialGroups _MaterialGroups;
    protected mats.importer.Suppliers _Suppliers;
    protected mats.importer.Values _Values;
    private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0000\u00b4c3ppsq\u0000~\u0000\u0000\u0000\u0087Jeppsq\u0000~\u0000\u0000\u0000Z1\u0097ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000-\u0018\u00c9pp\u0000sq\u0000~\u0000\b\u0000-\u0018\u00bepp\u0000sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0000-\u0018\u00b3ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000-\u0018\u00a8sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\txq\u0000~\u0000\u0003\u0000-\u0018\u00a5q\u0000~\u0000\u0013psr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\u0012\u0001psr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0018psr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001fxq\u0000~\u0000\u001at\u0000\u0017mats.importer.Supplierst\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u001et\u0000\tsupplierst\u0000\u0000sq\u0000~\u0000\b\u0000-\u0018\u00c9pp\u0000sq\u0000~\u0000\b\u0000-\u0018\u00bepp\u0000sq\u0000~\u0000\r\u0000-\u0018\u00b3ppsq\u0000~\u0000\u000f\u0000-\u0018\u00a8q\u0000~\u0000\u0013psq\u0000~\u0000\u0014\u0000-\u0018\u00a5q\u0000~\u0000\u0013pq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\u001cmats.importer.MaterialGroupsq\u0000~\u0000\"sq\u0000~\u0000\u001et\u0000\u000ematerialGroupsq\u0000~\u0000%sq\u0000~\u0000\b\u0000-\u0018\u00c9pp\u0000sq\u0000~\u0000\b\u0000-\u0018\u00bepp\u0000sq\u0000~\u0000\r\u0000-\u0018\u00b3ppsq\u0000~\u0000\u000f\u0000-\u0018\u00a8q\u0000~\u0000\u0013psq\u0000~\u0000\u0014\u0000-\u0018\u00a5q\u0000~\u0000\u0013pq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\u0017mats.importer.Materialsq\u0000~\u0000\"sq\u0000~\u0000\u001et\u0000\tmaterialsq\u0000~\u0000%sq\u0000~\u0000\b\u0000-\u0018\u00c9pp\u0000sq\u0000~\u0000\b\u0000-\u0018\u00bepp\u0000sq\u0000~\u0000\r\u0000-\u0018\u00b3ppsq\u0000~\u0000\u000f\u0000-\u0018\u00a8q\u0000~\u0000\u0013psq\u0000~\u0000\u0014\u0000-\u0018\u00a5q\u0000~\u0000\u0013pq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\u0014mats.importer.Valuesq\u0000~\u0000\"sq\u0000~\u0000\u001et\u0000\u0006valuesq\u0000~\u0000%sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000B[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u000b\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0007ppppppppppppppppppppppppppppppq\u0000~\u0000\u0011q\u0000~\u0000)q\u0000~\u00002q\u0000~\u0000;pppppppq\u0000~\u0000\u000eq\u0000~\u0000(q\u0000~\u00001q\u0000~\u0000:pppppppppppppppppq\u0000~\u0000\u0005pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0006ppppp");

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return mats.importer.MaterialDataType.class;
    }

    public mats.importer.Materials getMaterials() {
        return _Materials;
    }

    public void setMaterials(mats.importer.Materials value) {
        _Materials = value;
    }

    public mats.importer.MaterialGroups getMaterialGroups() {
        return _MaterialGroups;
    }

    public void setMaterialGroups(mats.importer.MaterialGroups value) {
        _MaterialGroups = value;
    }

    public mats.importer.Suppliers getSuppliers() {
        return _Suppliers;
    }

    public void setSuppliers(mats.importer.Suppliers value) {
        _Suppliers = value;
    }

    public mats.importer.Values getValues() {
        return _Values;
    }

    public void setValues(mats.importer.Values value) {
        _Values = value;
    }

    public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
        return new mats.importer.impl.MaterialDataTypeImpl.Unmarshaller(context);
    }

    public java.lang.Class getPrimaryInterfaceClass() {
        return PRIMARY_INTERFACE_CLASS();
    }

    public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_Suppliers instanceof javax.xml.bind.Element) {
            context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _Suppliers));
        } else {
            context.startElement("", "suppliers");
            context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _Suppliers));
            context.endAttributes();
            context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _Suppliers));
            context.endElement();
        }
        if (_MaterialGroups instanceof javax.xml.bind.Element) {
            context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _MaterialGroups));
        } else {
            context.startElement("", "materialGroups");
            context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _MaterialGroups));
            context.endAttributes();
            context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _MaterialGroups));
            context.endElement();
        }
        if (_Materials instanceof javax.xml.bind.Element) {
            context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _Materials));
        } else {
            context.startElement("", "materials");
            context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _Materials));
            context.endAttributes();
            context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _Materials));
            context.endElement();
        }
        if (_Values instanceof javax.xml.bind.Element) {
            context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _Values));
        } else {
            context.startElement("", "values");
            context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _Values));
            context.endAttributes();
            context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _Values));
            context.endElement();
        }
    }

    public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (mats.importer.MaterialDataType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
    {


        public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
            super(context, "-------------");
        }

        protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
            return mats.importer.impl.MaterialDataTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, org.xml.sax.Attributes __atts)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (state) {
                case  10 :
                    if (("" == ___uri)&&("value" == ___local)) {
                        _Values = ((mats.importer.impl.ValuesImpl) spawnChildFromEnterElement((mats.importer.impl.ValuesImpl.class), 11, ___uri, ___local, __atts));
                        return ;
                    }
                    break;
                case  9 :
                    if (("" == ___uri)&&("values" == ___local)) {
                        context.pushAttributes(__atts);
                        state = 10;
                        return ;
                    }
                    break;
                case  7 :
                    if (("" == ___uri)&&("material" == ___local)) {
                        _Materials = ((mats.importer.impl.MaterialsImpl) spawnChildFromEnterElement((mats.importer.impl.MaterialsImpl.class), 8, ___uri, ___local, __atts));
                        return ;
                    }
                    break;
                case  1 :
                    if (("" == ___uri)&&("supplier" == ___local)) {
                        _Suppliers = ((mats.importer.impl.SuppliersImpl) spawnChildFromEnterElement((mats.importer.impl.SuppliersImpl.class), 2, ___uri, ___local, __atts));
                        return ;
                    }
                    break;
                case  6 :
                    if (("" == ___uri)&&("materials" == ___local)) {
                        context.pushAttributes(__atts);
                        state = 7;
                        return ;
                    }
                    break;
                case  4 :
                    if (("" == ___uri)&&("materialGroups" == ___local)) {
                        _MaterialGroups = ((mats.importer.impl.MaterialGroupsImpl) spawnChildFromEnterElement((mats.importer.impl.MaterialGroupsImpl.class), 5, ___uri, ___local, __atts));
                        return ;
                    }
                    break;
                case  12 :
                    revertToParentFromEnterElement(___uri, ___local, __atts);
                    return ;
                case  0 :
                    if (("" == ___uri)&&("suppliers" == ___local)) {
                        context.pushAttributes(__atts);
                        state = 1;
                        return ;
                    }
                    break;
                case  3 :
                    if (("" == ___uri)&&("materialGroups" == ___local)) {
                        context.pushAttributes(__atts);
                        state = 4;
                        return ;
                    }
                    break;
            }
            super.enterElement(___uri, ___local, __atts);
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (state) {
                case  10 :
                    if (("" == ___uri)&&("values" == ___local)) {
                        _Values = ((mats.importer.impl.ValuesImpl) spawnChildFromLeaveElement((mats.importer.impl.ValuesImpl.class), 11, ___uri, ___local));
                        return ;
                    }
                    break;
                case  7 :
                    if (("" == ___uri)&&("materials" == ___local)) {
                        _Materials = ((mats.importer.impl.MaterialsImpl) spawnChildFromLeaveElement((mats.importer.impl.MaterialsImpl.class), 8, ___uri, ___local));
                        return ;
                    }
                    break;
                case  1 :
                    if (("" == ___uri)&&("suppliers" == ___local)) {
                        _Suppliers = ((mats.importer.impl.SuppliersImpl) spawnChildFromLeaveElement((mats.importer.impl.SuppliersImpl.class), 2, ___uri, ___local));
                        return ;
                    }
                    break;
                case  5 :
                    if (("" == ___uri)&&("materialGroups" == ___local)) {
                        context.popAttributes();
                        state = 6;
                        return ;
                    }
                    break;
                case  4 :
                    if (("" == ___uri)&&("materialGroups" == ___local)) {
                        _MaterialGroups = ((mats.importer.impl.MaterialGroupsImpl) spawnChildFromLeaveElement((mats.importer.impl.MaterialGroupsImpl.class), 5, ___uri, ___local));
                        return ;
                    }
                    break;
                case  12 :
                    revertToParentFromLeaveElement(___uri, ___local);
                    return ;
                case  11 :
                    if (("" == ___uri)&&("values" == ___local)) {
                        context.popAttributes();
                        state = 12;
                        return ;
                    }
                    break;
                case  8 :
                    if (("" == ___uri)&&("materials" == ___local)) {
                        context.popAttributes();
                        state = 9;
                        return ;
                    }
                    break;
                case  2 :
                    if (("" == ___uri)&&("suppliers" == ___local)) {
                        context.popAttributes();
                        state = 3;
                        return ;
                    }
                    break;
            }
            super.leaveElement(___uri, ___local);
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (state) {
                case  12 :
                    revertToParentFromEnterAttribute(___uri, ___local);
                    return ;
            }
            super.enterAttribute(___uri, ___local);
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (state) {
                case  12 :
                    revertToParentFromLeaveAttribute(___uri, ___local);
                    return ;
            }
            super.leaveAttribute(___uri, ___local);
        }

        public void text(java.lang.String value)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            try {
                switch (state) {
                    case  12 :
                        revertToParentFromText(value);
                        return ;
                }
            } catch (java.lang.RuntimeException e) {
                handleUnexpectedTextException(value, e);
            }
        }

        public void leaveChild(int nextState)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (nextState) {
                case  5 :
                    state = 5;
                    return ;
                case  11 :
                    state = 11;
                    return ;
                case  8 :
                    state = 8;
                    return ;
                case  2 :
                    state = 2;
                    return ;
            }
            super.leaveChild(nextState);
        }

    }

}
