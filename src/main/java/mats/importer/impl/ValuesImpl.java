//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.11.02 at 10:24:27 GMT+02:00 
//


package mats.importer.impl;

public class ValuesImpl implements mats.importer.Values, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
{

    protected com.sun.xml.bind.util.ListImpl _Value = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0000-\u0018\u00d7ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000-\u0018\u00ccsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000-\u0018\u00c9q\u0000~\u0000\np\u0000sq\u0000~\u0000\u000b\u0000-\u0018\u00bepp\u0000sq\u0000~\u0000\u0000\u0000-\u0018\u00b3ppsq\u0000~\u0000\u0006\u0000-\u0018\u00a8q\u0000~\u0000\npsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003\u0000-\u0018\u00a5q\u0000~\u0000\npsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\t\u0001psr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0016psr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001dxq\u0000~\u0000\u0018t\u0000\u001emats.importer.Values.ValueTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u001ct\u0000\u0005valuet\u0000\u0000q\u0000~\u0000\u001bsr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000%[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0004\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfpppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0011ppppppppppq\u0000~\u0000\u0010ppppppppppppppppppppppppq\u0000~\u0000\bppppppppppq\u0000~\u0000\u0005pppppppppppppppppppppppppppppppppppppppppppppppppppppp");

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return mats.importer.Values.class;
    }

    public java.util.List getValue() {
        return _Value;
    }

    public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
        return new mats.importer.impl.ValuesImpl.Unmarshaller(context);
    }

    public java.lang.Class getPrimaryInterfaceClass() {
        return PRIMARY_INTERFACE_CLASS();
    }

    public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Value.size();
        while (idx1 != len1) {
            if (_Value.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _Value.get(idx1 ++)));
            } else {
                context.startElement("", "value");
                int idx_0 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.serializer.XMLSerializable) _Value.get(idx_0 ++)));
                context.endAttributes();
                context.childAsElements(((com.sun.xml.bind.serializer.XMLSerializable) _Value.get(idx1 ++)));
                context.endElement();
            }
        }
    }

    public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Value.size();
    }

    public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Value.size();
    }

    public java.lang.Class getPrimaryInterface() {
        return (mats.importer.Values.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
    {


        public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
            super(context, "---");
        }

        protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
            return mats.importer.impl.ValuesImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, org.xml.sax.Attributes __atts)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (state) {
                case  1 :
                    if (("" == ___uri)&&("supplier" == ___local)) {
                        _Value.add(((mats.importer.impl.ValuesImpl.ValueTypeImpl) spawnChildFromEnterElement((mats.importer.impl.ValuesImpl.ValueTypeImpl.class), 2, ___uri, ___local, __atts)));
                        return ;
                    }
                    break;
                case  0 :
                    if (("" == ___uri)&&("value" == ___local)) {
                        context.pushAttributes(__atts);
                        state = 1;
                        return ;
                    }
                    revertToParentFromEnterElement(___uri, ___local, __atts);
                    return ;
            }
            super.enterElement(___uri, ___local, __atts);
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (state) {
                case  2 :
                    if (("" == ___uri)&&("value" == ___local)) {
                        context.popAttributes();
                        state = 0;
                        return ;
                    }
                    break;
                case  0 :
                    revertToParentFromLeaveElement(___uri, ___local);
                    return ;
            }
            super.leaveElement(___uri, ___local);
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (state) {
                case  0 :
                    revertToParentFromEnterAttribute(___uri, ___local);
                    return ;
            }
            super.enterAttribute(___uri, ___local);
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (state) {
                case  0 :
                    revertToParentFromLeaveAttribute(___uri, ___local);
                    return ;
            }
            super.leaveAttribute(___uri, ___local);
        }

        public void text(java.lang.String value)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            try {
                switch (state) {
                    case  0 :
                        revertToParentFromText(value);
                        return ;
                }
            } catch (java.lang.RuntimeException e) {
                handleUnexpectedTextException(value, e);
            }
        }

        public void leaveChild(int nextState)
            throws com.sun.xml.bind.unmarshaller.UnreportedException
        {
            switch (nextState) {
                case  2 :
                    state = 2;
                    return ;
            }
            super.leaveChild(nextState);
        }

    }

    public static class ValueTypeImpl implements mats.importer.Values.ValueType, com.sun.xml.bind.unmarshaller.UnmarshallableObject, com.sun.xml.bind.serializer.XMLSerializable, com.sun.xml.bind.validator.ValidatableObject
    {

        protected java.math.BigDecimal _Cost;
        protected java.lang.String _Supplier;
        protected java.math.BigDecimal _Length;
        protected java.math.BigDecimal _Width;
        protected java.math.BigDecimal _Thickness;
        protected java.math.BigDecimal _Rebate;
        protected java.lang.String _Status;
        protected java.lang.String _ItemCode;
        private final static com.sun.msv.grammar.Grammar schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize("\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/grammar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0004\u0012\u00df\u00a3ppsq\u0000~\u0000\u0000\u0003\u00cay\u00b5ppsq\u0000~\u0000\u0000\u0003%V\u00efppsq\u0000~\u0000\u0000\u0002\u00804)ppsq\u0000~\u0000\u0000\u0001\u00db\u0011cppsq\u0000~\u0000\u0000\u00015\u00ee\u009dppsq\u0000~\u0000\u0000\u0000\u0090\u00cb\u00d7ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000He\u00e9pp\u0000sr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000He\u00deppsr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0018L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$1\u0013JMoI\u00db\u00a4G\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0018L\u0000\fnamespaceURIq\u0000~\u0000\u0018xpq\u0000~\u0000\u001cq\u0000~\u0000\u001bsr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0018L\u0000\fnamespaceURIq\u0000~\u0000\u0018xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\bsuppliert\u0000\u0000sq\u0000~\u0000\f\u0000He\u00e9pp\u0000q\u0000~\u0000\u0013sq\u0000~\u0000$t\u0000\bitemCodeq\u0000~\u0000(sq\u0000~\u0000\f\u0000\u00a5\"\u00c1pp\u0000sq\u0000~\u0000\u0010\u0000\u00a5\"\u00b6ppsr\u0000#com.sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0015q\u0000~\u0000\u001bt\u0000\u0007decimalsr\u0000.com.sun.msv.datatype.xsd.WhiteSpaceProcessor$2\u0087z9\u00ee\u00f8,N\u0005\u0002\u0000\u0000xq\u0000~\u0000\u001eq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u00000q\u0000~\u0000\u001bsq\u0000~\u0000$t\u0000\u0004costq\u0000~\u0000(sq\u0000~\u0000\f\u0000\u00a5\"\u00c1pp\u0000q\u0000~\u0000-sq\u0000~\u0000$t\u0000\u0005widthq\u0000~\u0000(sq\u0000~\u0000\f\u0000\u00a5\"\u00c1pp\u0000q\u0000~\u0000-sq\u0000~\u0000$t\u0000\u0006lengthq\u0000~\u0000(sq\u0000~\u0000\f\u0000\u00a5\"\u00c1pp\u0000q\u0000~\u0000-sq\u0000~\u0000$t\u0000\tthicknessq\u0000~\u0000(sq\u0000~\u0000\f\u0000\u00a5\"\u00c1pp\u0000q\u0000~\u0000-sq\u0000~\u0000$t\u0000\u0006rebateq\u0000~\u0000(sq\u0000~\u0000\f\u0000He\u00e9pp\u0000q\u0000~\u0000\u0013sq\u0000~\u0000$t\u0000\u0006statusq\u0000~\u0000(sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000F[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0007\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfpppppq\u0000~\u0000\nppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0005ppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0007ppppppppq\u0000~\u0000\tppppppppq\u0000~\u0000\u000bppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0006ppppppppq\u0000~\u0000\bppp");

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return mats.importer.Values.ValueType.class;
        }

        public java.math.BigDecimal getCost() {
            return _Cost;
        }

        public void setCost(java.math.BigDecimal value) {
            _Cost = value;
        }

        public java.lang.String getSupplier() {
            return _Supplier;
        }

        public void setSupplier(java.lang.String value) {
            _Supplier = value;
        }

        public java.math.BigDecimal getLength() {
            return _Length;
        }

        public void setLength(java.math.BigDecimal value) {
            _Length = value;
        }

        public java.math.BigDecimal getWidth() {
            return _Width;
        }

        public void setWidth(java.math.BigDecimal value) {
            _Width = value;
        }

        public java.math.BigDecimal getThickness() {
            return _Thickness;
        }

        public void setThickness(java.math.BigDecimal value) {
            _Thickness = value;
        }

        public java.math.BigDecimal getRebate() {
            return _Rebate;
        }

        public void setRebate(java.math.BigDecimal value) {
            _Rebate = value;
        }

        public java.lang.String getStatus() {
            return _Status;
        }

        public void setStatus(java.lang.String value) {
            _Status = value;
        }

        public java.lang.String getItemCode() {
            return _ItemCode;
        }

        public void setItemCode(java.lang.String value) {
            _ItemCode = value;
        }

        public com.sun.xml.bind.unmarshaller.ContentHandlerEx getUnmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
            return new mats.importer.impl.ValuesImpl.ValueTypeImpl.Unmarshaller(context);
        }

        public java.lang.Class getPrimaryInterfaceClass() {
            return PRIMARY_INTERFACE_CLASS();
        }

        public void serializeElements(com.sun.xml.bind.serializer.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            context.startElement("", "supplier");
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Supplier));
            } catch (java.lang.Exception e) {
                com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
            context.startElement("", "itemCode");
            context.endAttributes();
            try {
                context.text(((java.lang.String) _ItemCode));
            } catch (java.lang.Exception e) {
                com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
            context.startElement("", "cost");
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _Cost)));
            } catch (java.lang.Exception e) {
                com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
            context.startElement("", "width");
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _Width)));
            } catch (java.lang.Exception e) {
                com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
            context.startElement("", "length");
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _Length)));
            } catch (java.lang.Exception e) {
                com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
            context.startElement("", "thickness");
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _Thickness)));
            } catch (java.lang.Exception e) {
                com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
            context.startElement("", "rebate");
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _Rebate)));
            } catch (java.lang.Exception e) {
                com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
            context.startElement("", "status");
            context.endAttributes();
            try {
                context.text(((java.lang.String) _Status));
            } catch (java.lang.Exception e) {
                com.sun.xml.bind.marshaller.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }

        public void serializeAttributes(com.sun.xml.bind.serializer.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
        }

        public void serializeAttributeBodies(com.sun.xml.bind.serializer.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
        }

        public java.lang.Class getPrimaryInterface() {
            return (mats.importer.Values.ValueType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public class Unmarshaller
            extends com.sun.xml.bind.unmarshaller.ContentHandlerEx
        {


            public Unmarshaller(com.sun.xml.bind.unmarshaller.UnmarshallingContext context) {
                super(context, "-------------------------");
            }

            protected com.sun.xml.bind.unmarshaller.UnmarshallableObject owner() {
                return mats.importer.impl.ValuesImpl.ValueTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, org.xml.sax.Attributes __atts)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (state) {
                    case  24 :
                        revertToParentFromEnterElement(___uri, ___local, __atts);
                        return ;
                    case  21 :
                        if (("" == ___uri)&&("status" == ___local)) {
                            context.pushAttributes(__atts);
                            state = 22;
                            return ;
                        }
                        break;
                    case  3 :
                        if (("" == ___uri)&&("itemCode" == ___local)) {
                            context.pushAttributes(__atts);
                            state = 4;
                            return ;
                        }
                        break;
                    case  0 :
                        if (("" == ___uri)&&("supplier" == ___local)) {
                            context.pushAttributes(__atts);
                            state = 1;
                            return ;
                        }
                        break;
                    case  12 :
                        if (("" == ___uri)&&("length" == ___local)) {
                            context.pushAttributes(__atts);
                            state = 13;
                            return ;
                        }
                        break;
                    case  18 :
                        if (("" == ___uri)&&("rebate" == ___local)) {
                            context.pushAttributes(__atts);
                            state = 19;
                            return ;
                        }
                        break;
                    case  6 :
                        if (("" == ___uri)&&("cost" == ___local)) {
                            context.pushAttributes(__atts);
                            state = 7;
                            return ;
                        }
                        break;
                    case  15 :
                        if (("" == ___uri)&&("thickness" == ___local)) {
                            context.pushAttributes(__atts);
                            state = 16;
                            return ;
                        }
                        break;
                    case  9 :
                        if (("" == ___uri)&&("width" == ___local)) {
                            context.pushAttributes(__atts);
                            state = 10;
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, __atts);
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (state) {
                    case  24 :
                        revertToParentFromLeaveElement(___uri, ___local);
                        return ;
                    case  11 :
                        if (("" == ___uri)&&("width" == ___local)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  17 :
                        if (("" == ___uri)&&("thickness" == ___local)) {
                            context.popAttributes();
                            state = 18;
                            return ;
                        }
                        break;
                    case  14 :
                        if (("" == ___uri)&&("length" == ___local)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  23 :
                        if (("" == ___uri)&&("status" == ___local)) {
                            context.popAttributes();
                            state = 24;
                            return ;
                        }
                        break;
                    case  2 :
                        if (("" == ___uri)&&("supplier" == ___local)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  20 :
                        if (("" == ___uri)&&("rebate" == ___local)) {
                            context.popAttributes();
                            state = 21;
                            return ;
                        }
                        break;
                    case  5 :
                        if (("" == ___uri)&&("itemCode" == ___local)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  8 :
                        if (("" == ___uri)&&("cost" == ___local)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local);
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (state) {
                    case  24 :
                        revertToParentFromEnterAttribute(___uri, ___local);
                        return ;
                }
                super.enterAttribute(___uri, ___local);
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                switch (state) {
                    case  24 :
                        revertToParentFromLeaveAttribute(___uri, ___local);
                        return ;
                }
                super.leaveAttribute(___uri, ___local);
            }

            public void text(java.lang.String value)
                throws com.sun.xml.bind.unmarshaller.UnreportedException
            {
                try {
                    switch (state) {
                        case  4 :
                            try {
                                _ItemCode = value;
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                            state = 5;
                            return ;
                        case  24 :
                            revertToParentFromText(value);
                            return ;
                        case  7 :
                            try {
                                _Cost = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                            state = 8;
                            return ;
                        case  16 :
                            try {
                                _Thickness = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                            state = 17;
                            return ;
                        case  19 :
                            try {
                                _Rebate = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                            state = 20;
                            return ;
                        case  1 :
                            try {
                                _Supplier = value;
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                            state = 2;
                            return ;
                        case  13 :
                            try {
                                _Length = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                            state = 14;
                            return ;
                        case  10 :
                            try {
                                _Width = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                            state = 11;
                            return ;
                        case  22 :
                            try {
                                _Status = value;
                            } catch (java.lang.Exception e) {
                                handleParseConversionException(e);
                            }
                            state = 23;
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
            }

        }

    }

}
